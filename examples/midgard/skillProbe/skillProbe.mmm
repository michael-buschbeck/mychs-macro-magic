!rem // skillProbe
!rem //
!mmm script
!mmm   set scriptVersion = "skillProbe 1.1.0-pre (2024-02-09)"
!rem
!rem   // MMM compatibility check: die if MMM version too low
!mmm   if version < 1.24
!mmm     do whisperback("Abbruch: MMM-Version 1.24.0 oder h√∂her erforderlich.")
!mmm     exit script
!mmm   end if
!rem
!mmm   set scriptCommand = "&#x25;{MacroSheet|skillProbe}"
!mmm   set usableSkills = "Alchemie", "F√§lschen", "Fallen entdecken", "Fallenmechanik", "Gassenwissen", "Landeskunde (Alba)", "Menschenkenntnis", "Naturkunde", "Pflanzenkunde", "Schleichen", "Spurensuche", "Tarnen", "Tierkunde", "Verh√∂ren", "Zauberkunde"
!mmm
!rem   // FUNCTIONS
!rem   //
!mmm   function tokenMenu()
!mmm     
!mmm     set skillSelectQuery = "?" & "{" & "Fertigkeit ausw√§hlen"
!mmm     for skill in usableSkills
!mmm       set skillSelectQuery = skillSelectQuery & "|" & skill & "," & skill
!mmm     end for
!mmm     set skillSelectQuery = skillSelectQuery & "}"
!mmm     set manualModifierQuery = "?" & "{" & "Modifikator|0" & "}"
!mmm     
!mmm     for charName in m3mgdPlayerCharacters
!mmm       set autoTokenList = autoTokenList, charName
!mmm     end for
!mmm     
!mmm     set buttonProps = { "label": "Ausgew√§hlte Token", "scriptCommand": script.scriptCommand, "settings": { "cATokenList": "selected", "cBSkill": "\"" & skillSelectQuery & "\"", "cCModifier": manualModifierQuery } }
!mmm     set buttonProps = buttonProps, { "label": "Ganze Gruppe", "scriptCommand": script.scriptCommand, "settings": { "cATokenList": stringify(autoTokenList), "cBSkill": "\"" & skillSelectQuery & "\"", "cCModifier": manualModifierQuery } }
!mmm     
!mmm     do whisperback(chatButtonTable("Fertigkeitspr√ºfung", { "type": "multi-buttons", "buttonProps": buttonProps } ))
!mmm     
!mmm   end function
!mmm
!rem   // Config: set defaults for customizable variables
!rem   //
!rem   //  cCheckVersion    Toggle version check
!rem   //  cBSkill          A skill as listed in the character sheet (column "Fertigkeit" [or "Fertigkeit2"?])
!rem   //  cCModifier       Modifier to the skill roll
!rem   //  cATokenList      List of valid token_id or character_id values for characters that get the sense rolls. Duplicates are ignored.
!rem   //    A, B, C serve to maintain the right order for chatButton() in libBasics
!rem   //
!mmm   set customizable cCheckVersion = false
!mmm   set customizable cATokenList = default
!mmm   set customizable cBSkill = default
!mmm   set customizable cCModifier = default
!mmm
!mmm   if cCheckVersion
!mmm     do whisperback(scriptVersion)
!mmm     exit script
!mmm   end if
!mmm
!rem   // Called without proper config -> show menu
!rem   //
!mmm   if isdefault(cATokenList)
!mmm     do tokenMenu()
!mmm     exit script
!mmm   end if
!mmm   
!rem   // Initialize 
!rem   //
!mmm   if isdefault(cATokenList) and selected
!mmm     set cATokenList = selected
!mmm   end if
!mmm
!rem   // Output formatting constants
!mmm   set playerMsgEmoji = "üí¨"
!mmm   set cssGMTableHead = "#\" style=\"border: 1px solid #000000; display:block;background-color:#702082;margin:0px;padding:5px;font-size:1.05em;font-style:normal;font-weight:bold;color:#FFFFFF;text-decoration:none;"
!mmm   set cssGMTableSection = "#\" style=\"border-left: 1px solid #000000;border-right: 1px solid #000000; display:block;background-color:#FFFFFF;margin:0px;padding:5px;font-size:1.05em;font-style:normal;font-weight:bold;color:#000000;text-decoration:none;"
!mmm   set cssGMTableItem = "#\" style=\"border-left: 1px solid #000000;border-right: 1px solid #000000;border-bottom: 1px solid #000000; display:block;background-color:#f0f0f0;margin:0px;padding:5px;font-style:normal;color:#000000;text-decoration:none;"
!mmm   set cssGMTableItemSuccess = "#\" style=\"border-left: 1px solid #000000;border-right: 1px solid #000000;border-bottom: 1px solid #000000; display:block;background-color:#cdde87;margin:0px;padding:5px;font-style:normal;color:#000000;text-decoration:none;"
!mmm   set cssGMTableItemFailure = "#\" style=\"border-left: 1px solid #000000;border-right: 1px solid #000000;border-bottom: 1px solid #000000; display:block;background-color:#ffccaa;margin:0px;padding:5px;font-style:normal;color:#000000;text-decoration:none;"
!mmm   set cssGMTableItemCriticalFailure = "#\" style=\"border-left: 1px solid #000000;border-right: 1px solid #000000;border-bottom: 1px solid #000000; display:block;background-color:#f06560;margin:0px;padding:5px;font-style:normal;color:#000000;text-decoration:none;"
!rem
!rem   // Due diligence: weed out duplicate tokens, in case cTokenList was populated manually or via {target}
!mmm   for item in cATokenList
!mmm 
!mmm     if not isunknown(item.token_id) and not isdenied(item.token_id)
!mmm       set id = item.token_id
!mmm     else
!mmm       if not isdenied(item.character_name)
!mmm         set item = item.character_name
!mmm       end if
!mmm       set id = "'" & item & "' (kein Token)"
!mmm     end if
!mmm     set dupeFound = false
!mmm     for trimmedId in trimmedTokenList
!mmm       if trimmedId eq id
!mmm         set dupeFound = true
!mmm       end if
!mmm     end for
!mmm     if not dupeFound
!mmm       set trimmedTokenList = trimmedTokenList, id
!mmm     end if
!mmm   end for
!rem
!mmm   combine chat
!mmm     
!mmm     chat: /w GM [${cBSkill}](${cssGMTableHead})
!mmm     chat: [W√ºrfe f√ºr...](${cssGMTableSection})
!mmm     
!rem     // Run through selected characters
!mmm     for id in trimmedTokenList
!mmm
!rem       // Initialize: refetch token ID and get name and skills
!mmm       set tokenID = id.token_id
!mmm       set tokenEffSkill = tokenID.(findattr(tokenID, "fertigkeiten", "Fertigkeit", cBSkill, "FW")) + tokenID.(findattr(tokenID, "fertigkeiten", "Fertigkeit", cBSkill, "Fertigkeitsbonus"))
!mmm       set tokenModifier = cCModifier
!mmm       set fallBack = ""
!mmm
!rem       // If skill is missing, try to default to the unlearned version
!mmm       if not tokenEffSkill and not isunknown(tokenID) and not isdenied(tokenID)
!mmm       
!mmm         set tokenEffSkill = tokenID.(findattr(tokenID, "fertigkeiten2", "Fertigkeit2", cBSkill & " (Ungelernt)", "FW2"))
!mmm         if not isunknown(tokenEffSkill) and tokenEffSkill > 0
!mmm           set fallBack = " (ungelernt)"
!mmm         end if
!mmm       
!mmm       end if
!mmm       
!rem       // Error handling
!mmm       if isdenied(tokenID) or isunknown(tokenID)
!mmm         
!mmm         set skippedList = skippedList, id
!mmm         
!mmm       else if not tokenEffSkill or tokenEffSkill == 0
!mmm         
!mmm         set skippedList = skippedList, (tokenID.token_name & ": '" & cBSkill & "'‚ùå") 
!mmm         
!rem       // And if everything is ready...
!mmm       else
!mmm         
!rem         // Execute skill roll
!mmm         set effModifier = sign(tokenEffSkill + tokenModifier, "math")
!mmm         set tokenRoll = roll("1d20" & effModifier)
!mmm         
!rem         // Overwrite tooltip to break down components
!mmm         set tokenResultTooltip = tokenRoll & " = (1d20 = " & (tokenRoll - effModifier) & ") + (EW = " & tokenEffSkill & ") " & sign(tokenModifier, "display")
!mmm         set tokenResult = highlight(tokenRoll, default, tokenResultTooltip)
!mmm         
!rem         // Compose output table row for GM
!mmm         if tokenResult >= 20 and fallBack eq ""
!mmm           set tokenXPGain = m3mgdProcessSkillXP(cBSkill, tokenRoll - effModifier, tokenID)
!mmm           chat: [${tokenID.token_name} ${tokenResult} &nbsp; EP: ${tokenXPGain}](${cssGMTableItemSuccess})
!mmm         else if tokenResult >= 20
!mmm           chat: [${tokenID.token_name}${fallBack} ${tokenResult} &nbsp; (keine EP)](${cssGMTableItemSuccess})
!mmm         else 
!mmm           chat: [${tokenID.token_name}${fallBack} ${tokenResult}](${cssGMTableItemFailure})
!mmm         end if
!mmm
!mmm       end if
!mmm       
!mmm     end for
!mmm
!rem     // Tell GM which selected characters were skipped
!mmm     if skippedList
!mmm         
!mmm       chat: [Keine W√ºrfe f√ºr...](${cssGMTableSection})
!mmm         
!mmm       for skippedItem in skippedList
!mmm         
!mmm         if skippedItem
!mmm         
!mmm           chat: [${skippedItem}](${cssGMTableItem})
!mmm         
!mmm         end if
!mmm         
!mmm       end for
!mmm         
!mmm     end if
!mmm         
!mmm   end combine
!mmm
!mmm end script