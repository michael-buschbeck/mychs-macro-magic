!rem // Midgard Melee Attack Script
!rem //
!mmm script
!mmm   set scriptVersion = "meleeAttack v2.0.0-pre (2022-03-03)"
!rem
!mmm   set customizable cCheckVersion = false
!mmm   if cCheckVersion
!mmm     do whisperback(scriptVersion)
!mmm     exit script
!mmm   end if
!mmm
!rem   // MMM compatibility check: die if MMM version too low
!mmm   if version < 1.26
!mmm     do whisperback("Abbruch: MMM-Version 1.26.0 oder höher erforderlich.")
!mmm     exit script
!mmm   end if
!mmm
!mmm   if not m3mgdExchange
!mmm     do whisperback("Game-global m3mgdExchange variables missing.")
!mmm     exit script
!mmm   end if
!rem
!rem   // Config: set defaults for customizable variables
!rem   //
!rem   //  cOwnID               Override if the script should work from a sender not identical with the character
!rem   //  cWeaponLabel         The label of the weapon, must be identical to your combat sheet
!rem   //  cWeaponName          Optional: The name of a named weapon, e.g. "Sting"
!rem   //  cWeaponType          The type of weapon for narration, the "sword" in "I'm swinging my sword Glamdring"
!rem   //  cMagicExtraDamageMarker   Attribute in which activity status (true/false) of the weapon's magic is stored
!rem   //  cMagicExtraDamage    Damage roll expression ("1d6+x") for additional magic damage
!mmm   if selected and sender.token_id ne selected and m3mgdValidateOwnTokenID(selected.token_id)
!mmm     set customizable cOwnID = selected.token_id
!mmm   else if m3mgdValidateOwnTokenID(sender.token_id)
!mmm     set customizable cOwnID = sender.token_id
!mmm   else
!mmm     set customizable cOwnID = default
!mmm   end if
!mmm   set customizable cWeaponLabel = ""
!mmm   set customizable cWeaponName = ""
!mmm   set customizable cWeaponType = default
!mmm   set customizable cMagicExtraDamageMarker = ""
!mmm   set customizable cMagicExtraDamage = ""
!mmm   set customizable cMagicExtraDamageLabel = "" 
!mmm
!rem   //  cVerbose             Toggle narrative output: true for on, false for off (made for oeGStefan)
!rem   //  cGMSilentMode        true/false: override if GM operates this script and wants to keep it silent
!rem   //  cFoeNameDefault      Output label for targets without names
!rem   //
!mmm   set customizable cVerbose = true
!mmm   set customizable cGMSilentMode = (cOwnID.PC != 1)
!mmm   set customizable cFoeNameDefault = "Fiesling ohne Namen"
!rem
!rem   //  cAttackRoll          Override by player to see beautifully animated 3D dice
!rem   //
!mmm   set customizable cTargetID = ""
!mmm   set customizable cSemiManualModifiers = default
!mmm   set customizable cManualModifiers = default
!mmm   set customizable cAttackRoll = roll("1d20")
!mmm
!rem
!rem   // Initialize & collect data
!rem
!rem   // Override chat sender for characters unconnected to the player (usually NPCs)
!mmm   if cOwnID.token_name ne sender
!mmm     set sender = cOwnID.token_name
!mmm   end if
!mmm   
!rem   // Refetch token id to ensure access in case of erroneous override in customize block
!mmm   set cOwnID = m3mgdValidateOwnTokenID(cOwnID)
!mmm   if not cOwnID
!mmm     do whisperback(scriptVersion & ": Invalid own token ID configured. Check custom config script.")
!mmm     exit script
!mmm   end if
!rem
!rem   // Constants
!rem
!mmm   set emojiMagic = "✨"
!mmm
!rem   // Validate attack weapon and request manual entry if selection is missing
!mmm
!mmm   if cWeaponLabel eq "" or not cOwnID.(findattr(cOwnID, "Angriff", "Waffe", cWeaponLabel, "WaffeEW"))
!mmm     set weaponsList = m3mgdListMeleeAttackWeapons(cOwnID)
!mmm     if not weaponsList
!mmm       do whisperback(cOwnID.name & " hat keine Nahkampfwaffen bzw. -fähigkeiten.")
!mmm       exit script
!mmm     else if count(weaponsList) == 1
!mmm       set cWeaponLabel = cOwnID.(weaponsList)
!mmm     else if cWeaponLabel ne ""
!mmm       do whisperback("Fehler: " & cOwnID.name & " hat keine Nahkampfwaffe " & cWeaponLabel & ".")
!mmm       exit script
!mmm     else 
!mmm       chat: /w "${cOwnID.character_name}" ${m3mgdWeaponSelectorChatMenu(cOwnID, "melee")}
!mmm       exit script
!mmm     end if
!mmm   end if
!mmm
!rem   // Initialize attack weapon properties
!mmm
!mmm   set effAttack = cOwnID.(findattr(cOwnID, "Angriff", "Waffe", cWeaponLabel, "WaffeEW"))
!mmm   set weaponDamageExpr = cOwnID.(findattr(cOwnID, "Angriff", "Waffe", cWeaponLabel, "WaffeSchaden"))
!mmm   set weaponDamageBonus = sign(cOwnID.(findattr(cOwnID, "Angriff", "Waffe", cWeaponLabel, "WaffeEfSchB")), "math")
!mmm   set magicWeapon = (cOwnID.(findattr(cOwnID, "Angriff", "Waffe", cWeaponLabel, "WaffeSchB")) > 0) or (cOwnID.(findattr(cOwnID, "Angriff", "Waffe", cWeaponLabel, "WaffeAngB")) > 0)
!mmm   set magicExtraDamageActive = (magicWeapon and getattr(cOwnID, cMagicExtraDamageMarker) eq "shown")
!mmm   if isdefault(cWeaponType)
!mmm     set cWeaponType = m3mgdMeleeWeaponType(cWeaponLabel)
!mmm   end if
!mmm   
!rem   // Initialize target token
!mmm
!mmm   set foeName = cTargetID.name
!mmm   if isdenied(foeName) or isunknown(foeName)
!mmm     set foeName = cFoeNameDefault
!mmm   end if
!mmm 
!rem   // Check for melee range (<=1 grid cell) and orientation, prepare calculations for attack from behind
!rem
!mmm   set myViewAngle = m3mgdGetViewAngle(cOwnID, cTargetID)
!mmm   if (myViewAngle < -90) or (myViewAngle > 90)
!mmm     chat [OutsideFieldOfVision]: $[targetName]{foeName} ist außerhalb meines Blickfeldes ($[viewAngle]{myViewAngle}°). Schade.
!mmm     exit script
!mmm   end if
!mmm   set foeViewAngle = m3mgdGetViewAngle(cTargetID, cOwnID)
!mmm   set distance = m3mgdGetDistance(cOwnID, cTargetID)
!mmm   set distanceUnits = distunits() 
!mmm   if (distance/(distsnap()*distscale())) > 0
!mmm     chat [OutsideStrikeDistance]: $[targetName]{foeName} ist zu weit entfernt für mein $[weaponType]{cWeaponType} * $[weaponName]{cWeaponName} * ($[weaponLabel]{cWeaponLabel}). Schade.
!mmm     exit script
!mmm   end if
!mmm      
!rem   // Collect attack modifiers
!rem
!mmm   set modifiers = 0
!mmm   set autoModifiers = 0
!mmm   set semiAutoModifiers = 0
!mmm   set modifierLog = ""
!mmm   set modifierTooltip = ""
!rem   // 1. Attacker exhausted
!mmm   if m3mgdIsExhausted(cOwnID)
!mmm     set autoModifiers = autoModifiers - 4
!mmm     set modifierLog = modifierLog & " {{Angreifer erschöpft ([" & cOwnID.name & "].AP:0)=-4}} "
!mmm     set modifierTooltip = modifierTooltip & " Angreifer&nbsp;erschöpft&nbsp;&nbsp;&nbsp;-4 "
!mmm   end if
!rem   // 2. Target exhausted
!mmm   if m3mgdIsExhausted(cTargetID)
!mmm     set autoModifiers = autoModifiers + 4
!mmm     set modifierLog = modifierLog & " {{Ziel erschöpft=+4}} "
!mmm     set modifierTooltip = modifierTooltip & " Ziel&nbsp;erschöpft&nbsp;&nbsp;&nbsp;+4 "
!mmm   end if
!rem   // 3. Attack from behind
!mmm   if (foeViewAngle < -90) or (foeViewAngle > 90)
!mmm     set autoModifiers = autoModifiers + 2
!mmm     set modifierLog = modifierLog & " {{Angriff von hinten=+2}} "
!mmm     set modifierTooltip = modifierTooltip & " Angriff&nbsp;von&nbsp;hinten&nbsp;&nbsp;&nbsp;+2 "
!mmm   end if
!rem   // Process additional standard modifiers collected from user via dropdown menu in a customize block
!mmm   if cSemiManualModifiers % 17 == 0
!mmm     set semiAutoModifiers = semiAutoModifiers - 6
!mmm     set modifierLog = modifierLog & " {{Völlige Dunkelheit / geblendet=-6}} "
!mmm     set modifierTooltip = modifierTooltip & " Völlige&nbsp;Dunkelheit/geblendet&nbsp;&nbsp;&nbsp;-6 "
!mmm   end if
!mmm   if cSemiManualModifiers % 13 == 0
!mmm     set semiAutoModifiers = semiAutoModifiers - 6
!mmm     set modifierLog = modifierLog & " {{Überstürzter Angriff=-6}} "
!mmm     set modifierTooltip = modifierTooltip & " Überstürzter&nbsp;Angriff&nbsp;&nbsp;&nbsp;-6 "
!mmm   end if
!mmm   if cSemiManualModifiers % 11 == 0
!mmm     set semiAutoModifiers = semiAutoModifiers - 4
!mmm     set modifierLog = modifierLog & " {{Spontaner Angriff=-4}} "
!mmm     set modifierTooltip = modifierTooltip & " Spontaner&nbsp;Angriff&nbsp;&nbsp;&nbsp;-4 "
!mmm   end if
!mmm   if cSemiManualModifiers % 7 == 0
!mmm     set semiAutoModifiers = semiAutoModifiers + 4
!mmm     set modifierLog = modifierLog & " {{Ziel flieht panisch=+4}} "
!mmm     set modifierTooltip = modifierTooltip & " Ziel&nbsp;flieht&nbsp;panisch&nbsp;&nbsp;&nbsp;+4 "
!mmm   end if
!mmm   if cSemiManualModifiers % 5 == 0
!mmm     set semiAutoModifiers = semiAutoModifiers + 4
!mmm     set modifierLog = modifierLog & " {{Ziel wehrlos=+4}} "
!mmm     set modifierTooltip = modifierTooltip & " Ziel&nbsp;wehrlos&nbsp;&nbsp;&nbsp;+4 "
!mmm   end if
!mmm   if cSemiManualModifiers % 3 == 0
!mmm     set semiAutoModifiers = semiAutoModifiers + 4
!mmm     set modifierLog = modifierLog & " {{Ziel liegt=+4}} "
!mmm     set modifierTooltip = modifierTooltip & " Ziel&nbsp;liegt&nbsp;&nbsp;&nbsp;+4 "
!mmm   end if
!mmm   if cSemiManualModifiers % 2 == 0
!mmm     set semiAutoModifiers = semiAutoModifiers + 2
!mmm     set modifierLog = modifierLog & " {{Angriff von oben=+2}} "
!mmm     set modifierTooltip = modifierTooltip & " Angriff&nbsp;von&nbsp;oben&nbsp;&nbsp;&nbsp;+2 "
!mmm   end if
!rem   // Process manual modifiers and sum up the various modifiers
!mmm   if cManualModifiers != 0
!mmm     set modifierLog = modifierLog & " {{Benutzereingabe=" & sign(cManualModifiers, "display") & "}} "
!mmm     set modifierTooltip = modifierTooltip & " Benutzereingabe&nbsp;&nbsp;&nbsp;" & sign(cManualModifiers, "display") & " "
!mmm   end if
!mmm   set modifiers = modifiers + autoModifiers + semiAutoModifiers + cManualModifiers
!rem
!rem   // Run & format rolls
!rem
!mmm   set attackResult = rollResult(cAttackRoll, effAttack, modifiers)
!mmm   if modifierLog eq ""
!mmm     set modifierLog = "{{Boni/Mali=keine}}"
!mmm     set modifierTooltip = " Boni/Mali&nbsp;&nbsp;&nbsp;keine "
!mmm   end if
!mmm   set modifiers = highlight(sign(modifiers, "display"), "info", modifierTooltip)
!mmm   set attackResultLog = attackResult & " = (1d20 = " & cAttackRoll & ") + (EW = " & effAttack & ") + (" & modifiers & ")"
!mmm   set criticalAttack = iscritical(cAttackRoll)
!rem
!mmm   if attackResult >= 20
!rem     // Damage roll (cannot be lower than 0)
!mmm     set damageRoll = roll(weaponDamageExpr)
!mmm     set damageResult = damageRoll + weaponDamageBonus
!mmm     if damageResult < 0
!mmm       set damageResult = highlight(0, "bad")
!mmm     end if
!mmm     set damageResultLog = "(" & weaponDamageExpr & " = " & damageRoll & ") " & weaponDamageBonus
!mmm     if magicExtraDamageActive and cMagicExtraDamage ne ""
!mmm       set magicExtraDamageRoll = roll(cMagicExtraDamage)
!mmm       if magicExtraDamageRoll < 0
!mmm         set magicExtraDamageRoll = highlight(0, "bad")
!mmm       end if
!mmm       set damageResult = highlight(damageResult + magicExtraDamageRoll, "normal")
!mmm       set damageResultLog = damageResultLog & " + (" & cMagicExtraDamage & " = " & magicExtraDamageRoll & ")"
!mmm     end if 
!mmm     set damageResultLog = damageResult & " = " & damageResultLog
!mmm     set damageResult = highlight(damageResult, default, damageResultLog)
!mmm   end if
!mmm
!rem   // Save key attack data for defense script
!rem
!mmm   if attackResult >= 20 and damageResult > 0
!mmm     if not m3mgdExchangeStoreAttack("melee") 
!mmm       do whisperback("Problem bei der Datenablage für das Abwehrskript; Angriffsdaten bitte manuell ergänzen.")
!mmm     end if
!mmm   end if
!rem
!rem   // Break down magic effects for player and GM
!mmm   if magicExtraDamageActive and attackResult >= 20 and damageResult > 0
!mmm     set modifierLog = modifierLog & " {{Zauberwaffe=**" & (damageResult - magicExtraDamageRoll) & "**&nbsp;" & emojiMagic & " +&nbsp;**" & magicExtraDamageRoll & "**&nbsp;" & cMagicExtraDamageLabel & "}} "
!mmm   else if magicWeapon and attackResult >= 20 and damageResult > 0
!mmm     set modifierLog = modifierLog & " {{Zauberwaffe=**" & damageResult & "**&nbsp;" & emojiMagic & " }} "
!mmm   end if
!mmm
!rem   // Register practice point, if applicable
!mmm   if iscritical(cAttackRoll) and not m3mgdIsExhausted(cTargetID)
!mmm     if m3mgdProcessCombatPP(cOwnID, cWeaponLabel, cTargetID)
!mmm       set modifierLog = modifierLog & " {{Praxispunkt=[x](https://media.giphy.com/media/hKafco7mFwBioBxqFT/giphy.gif)}} "
!mmm     end if
!mmm   else if iscritical(cAttackRoll)
!mmm     set modifierLog = modifierLog & " {{Kein Praxispunkt=Gegner war schon erschöpft (AP=0)}} "
!mmm   end if
!mmm
!rem   // Pull together a sensible guess at a default way of addressing the weapon for output
!mmm   if cWeaponName eq ""
!mmm     set outputWeaponLabel = cWeaponLabel
!mmm   else
!mmm     set outputWeaponLabel = cWeaponType & " *" & cWeaponName & "*"
!mmm   end if
!mmm
!mmm
!mmm   if cVerbose
!mmm     combine chat
!rem       // Check if script is run for an NPC (whisper data to GM only)
!mmm       if cGMSilentMode
!mmm         chat: /w GM 
!mmm       end if
!mmm       if not magicExtraDamageActive
!mmm         chat [AttackOpening]:                          Mein Angriff mit $[weaponLabel]{outputWeaponLabel} ($[weaponType]{cWeaponType} "$[weaponName]{cWeaponName}") auf $[targetName]{foeName} 
!mmm       else
!mmm         chat [AttackOpeningExtraMagicDamage]:          Mein Angriff mit $[weaponLabel]{outputWeaponLabel} ($[weaponType]{cWeaponType} "$[weaponName]{cWeaponName}", magischer Zusatzschaden aktiviert) auf $[targetName]{foeName} 
!mmm       end if
!mmm       if criticalAttack
!mmm         chat [AttackIsCriticalSuccess]:                ist ein **kritischer Erfolg** ($[attackResult]{attackResult+0}).
!mmm       else if isfumble(cAttackRoll)
!mmm         chat [AttackIsCriticalFailure]:                ist ein **peinlicher Patzer**. 
!mmm       else if attackResult >= 22 and damageResult > 3
!mmm         chat [AttackSucceedsWell]:                     scheint ein ordentlicher Treffer zu werden ($[attackResult]{attackResult+0}).
!mmm       else if attackResult >= 20 
!mmm         chat [AttackSucceedsBarely]:                   trifft gerade so ($[attackResult]{attackResult+0}).
!mmm       else if attackResult >= 18
!mmm         chat [AttackFailsBarely]:                      verfehlt knapp ($[attackResult]{attackResult+0}). 
!mmm       else
!mmm         chat [AttackFailsClearly]:                     verfehlt ($[attackResult]{attackResult+0}). 
!mmm       end if
!mmm       if attackResult >= 20
!mmm         if damageResult > 10
!mmm           set damageDescription = "ausgesprochen schwerer, unter Umständen lebensgefährlicher"
!mmm         else if damageResult > 3
!mmm           set damageDescription = "schmerzhafter"
!mmm         else if damageResult > 0
!mmm           set damageDescription = "leichter"
!mmm         else 
!mmm           set damageDescription = "höchstens kosmetischer"
!mmm         end if
!mmm         if damageRoll >= 8 and not isdenied(cTargetID.(m3mgdGetEnduranceAttribute(cTargetID))) and cTargetID.(m3mgdGetEnduranceAttribute(cTargetID)) >= 8
!mmm           set damageDescription = damageDescription & ", verheerender"
!mmm         end if
!mmm         if not magicExtraDamageActive
!mmm           chat [AttackSuccessClosing]:                 $[targetName]{foeName} erwischt ein $[damageDescription]{damageDescription} Treffer, wenn die Abwehr nicht gelingt.
!mmm         else
!mmm           chat [AttackSuccessClosingExtraMagicDamage]: $[targetName]{foeName} erwischt ein $[damageDescription]{damageDescription} Treffer, wenn die Abwehr nicht gelingt.
!mmm         end if
!mmm       else
!mmm         chat [AttackFailureClosing]:                   $[targetName]{foeName} war zu keinem Zeitpunkt in Gefahr.
!mmm       end if
!mmm     end combine
!mmm   end if
!rem
!rem   // Add data table for easy reference
!mmm   combine chat
!rem     // Check if script is run for an NPC (whisper data to GM only)
!mmm     if cGMSilentMode
!mmm       chat: /w GM 
!mmm     end if
!mmm     chat:      ${"&"}{template:default} {{name=${cOwnID.name}: Nahkampfangriff mit $[weaponLabel]{outputWeaponLabel}}} 
!mmm     chat:      {{Ziel=**$[targetName]{foeName}** ${m3mgdShapeMoji(cTargetID)}}}
!mmm     if attackResult >= 20
!mmm       chat:    {{Erfolg=$[attackResult]{attackResult} (**Wurf**&nbsp;$[attackRoll]{cAttackRoll})}}
!mmm     else 
!mmm       chat:    {{Fehlschlag=$[attackResult]{attackResult} (**Wurf**&nbsp;$[attackRoll]{cAttackRoll})}}
!mmm     end if
!mmm     chat:      {{Boni/Mali=**$[attackModifiers]{modifiers}**}}
!mmm     if attackResult >= 20
!mmm       set damageType = ""
!mmm       if magicWeapon and damageResult > 0
!mmm         set damageType = damageType & emojiMagic
!mmm       end if 
!mmm       chat:    {{Schaden=$[damageResult]{damageResult} **LP/AP** ${damageType}}}
!mmm     end if
!mmm   end combine
!mmm
!mmm   if modifiers != 0
!mmm     chat: /w GM ${"&"}{template:default} ${modifierLog}
!mmm     if not cGMSilentMode
!mmm       chat: /w "${cOwnID.character_name}" ${"&"}{template:default} ${modifierLog}
!mmm     end if
!mmm   end if
!mmm
!mmm   if attackResult >= 20
!mmm     if cOwnID.PC 
!mmm       chat: /w "${cOwnID.character_name}" ${m3mgdWeaponSelectorChatMenu(cTargetID, "defense", cWeaponType)}
!mmm     else
!mmm       set payload = literal("!mmm do chat('/w \"" & cTargetID.character_name & "\" ' & m3mgdWeaponSelectorChatMenu(\"" & cTargetID & "\", \"defense\", \"" & cWeaponType & "\"))") & "&#13;"
!mmm       chat: /w GM [🖅 **an ${cTargetID.character_name}**](${payload})
!mmm     end if
!mmm   end if
!mmm end script