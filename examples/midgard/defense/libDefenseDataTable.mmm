!rem // begin MMM fragment
!rem // 
!rem // Expects ("imports") variables:
!rem //   CURRENT               (string) code block identifier
!rem //   * from libMidgardGlobal
!rem //   _GMSilentMode         (true/false)
!rem //   _ownID                (Roll20 token ID)
!rem //   _weaponLabel          (string)
!rem //   _armorPiercing        (true/false)
!rem //   _defenseSuccess       (true/false)
!rem //   _defenseResult        (Integer)
!rem //   _prvEndurance, _maxEndurance, _newEndurance
!rem //   _prvHealth, _maxHealth, _newHealth
!rem //   _timeToDie
!rem //   
!mmm   set PARENT = CURRENT
!mmm   set CURRENT = "libDefenseDataTable 1.0.0 (2021-12-22)"
!mmm
!mmm   if not (_cGMSilentMode == 1 or _cGMSilentMode == 0)
!mmm     do whisperback(CURRENT & ": invalid variable value - cGMSilentMode")
!mmm     exit script
!mmm   end if
!mmm
!mmm   set _ownID = _ownID.token_id
!mmm   if isdenied(_ownID) or isunknown(_ownID)
!mmm     do whisperback(CURRENT & ": invalid variable value - ownID: " & getreason(_ownID))
!mmm     exit script
!mmm   end if
!mmm
!rem   // Prepare output
!rem
!mmm   set _shapeMoji = ""
!mmm   if not _maxEndurance == 0 and _prvEndurance <= 0
!mmm     set _shapeMoji = "ðŸ¥´"
!mmm   end if
!mmm   if not _maxHealth == 0 and _prvHealth <= 0
!mmm     set _shapeMoji = "ðŸ’€"
!mmm   end if
!mmm
!mmm   set __criticalAttack = (m3mgdExchange.(m3mgdAttrAttackResult).max eq "true")
!mmm
!mmm   set __attackResult = m3mgdExchange.(m3mgdAttrAttackResult)
!mmm   if __criticalAttack
!mmm     set __attackResult = highlight(__attackResult, "good", "Kritisch erfolgreicher Angriff von " & m3mgdExchange.(m3mgdAttrAttackerID).name)
!mmm   else
!mmm     set __attackResult = highlight(__attackResult, "info", "Angriff von " & m3mgdExchange.(m3mgdAttrAttackerID).name)
!mmm   end if
!mmm   set __attackDamage = highlight(m3mgdExchange.(m3mgdAttrAttackDamage), "info", m3mgdExchange.(m3mgdAttrAttackType))
!mmm   set __effEnduranceLoss = highlight(_prvEndurance - _newEndurance, "normal")
!mmm   set __effHealthLoss = highlight(_prvHealth - _newHealth, "normal")
!rem
!rem   // Build data table
!rem
!mmm   combine chat
!mmm
!mmm     if _GMSilentMode == 1
!mmm       chat: /w GM 
!mmm     end if
!mmm
!mmm     chat: ${"&"}{template:default} 
!mmm
!mmm     if m3mgdExchange.(m3mgdAttrAttackType) eq "magic"
!mmm       chat: {{name=${_shapeMoji}${_ownID.name}: Abwehr gegen ${m3mgdExchange.(m3mgdAttrAttackType).max} }}
!mmm     else if _weaponLabel eq "Abwehr ohne Schild"
!mmm       chat: {{name=${_shapeMoji}${_ownID.name}: ${_weaponLabel} }}
!mmm     else
!mmm       chat: {{name=${_shapeMoji}${_ownID.name}: Abwehr mit ${_weaponLabel} }}
!mmm     end if 
!mmm
!mmm     if _armorPiercing == 1 and __attackDamage > 3
!mmm       chat: {{Angriff=**${__attackResult}&nbsp;/&nbsp;${__attackDamage}&nbsp;Schaden** (RÃ¼stungsschutz wg. Geschosstyp auf 3 begrenzt)}}
!mmm     else if __attackDamage & "" eq "0"
!mmm       chat: {{Angriff=**${__attackResult}&nbsp;/&nbsp;Sonderschaden**}}
!mmm     else if __attackDamage > 0
!mmm       chat: {{Angriff=**${__attackResult}&nbsp;/&nbsp;${__attackDamage}&nbsp;Schaden**}}
!mmm     else
!mmm       chat: {{Angriff=${__attackResult}}}
!mmm     end if
!mmm
!mmm     if _defenseSuccess
!mmm       chat: {{Abwehr=${_defenseResult} **Leichter Treffer**}}
!mmm       do spawnfx("bubbling-water", _ownID.left, _ownID.top)
!mmm     else if __criticalAttack == true
!mmm       chat: {{Abwehr=${_defenseResult} **Schwerer kritischer Treffer**}}
!mmm       do spawnfx("nova-blood", _ownID.left, _ownID.top)
!mmm     else 
!mmm       chat: {{Abwehr=${_defenseResult} **Schwerer Treffer**}}
!mmm       do spawnfx("bubbling-blood", _ownID.left, _ownID.top)
!mmm     end if
!mmm
!mmm     if _defenseSuccess and __effEnduranceLoss > 0
!mmm       chat: {{Schaden=**${__effEnduranceLoss}&nbsp;AP**}}
!mmm     else if not _defenseSuccess and __attackDamage & "" eq "0"
!mmm       chat: {{Schaden=**SPEZIAL**}}
!mmm     else if not _defenseSuccess
!mmm       chat: {{Schaden=**${__effHealthLoss}&nbsp;LP&nbsp;/&nbsp;${__effEnduranceLoss}&nbsp;AP**}}
!mmm     end if
!mmm
!mmm     if __criticalAttack == true and m3mgdExchange.(m3mgdAttrAttackType) eq "magic"
!mmm       chat: {{Kritischer Zaubererfolg=Zauber wirkt **doppelt so stark** oder ist **halb so teuer**: Nach Wahl des Zauberers umsetzen.}}
!mmm     else if __criticalAttack == true
!mmm       chat: {{Kritischer Schaden=ðŸŽ²ðŸŽ²ðŸŽ²}}
!mmm     end if
!mmm
!mmm     if _newHealth < 0 and _timeToDie < 0
!mmm       chat: {{Zustand=**Sofortiger Tod &#10013;**}}
!mmm     else 
!mmm       chat: {{Zustand=${_newHealth} **LP** / ${_newEndurance} **AP**}}
!mmm       if not _maxHealth == 0 and _newHealth > 3 and _newHealth <= 0.5 * _maxHealth
!mmm         chat: {{Schwer verwundet=ðŸŸ¡ max. halbe AP, halbe Bewegung}}
!mmm       else if not _maxHealth == 0 and _newHealth > 0 and _newHealth <= 3
!mmm         chat: {{Extrem schwer verwundet=ðŸ”´ handlungsunfÃ¤hig, B=4, PW:Kon nach 10min, sonst Schock}}
!mmm       else if not _maxHealth == 0 and _newHealth == 0
!mmm         chat: {{Dem Tode nah=ðŸ’€ handlungsunfÃ¤hig, B=0, PW:Kon nach 10min, sonst Schock}}
!mmm       else if _newHealth < 0 and _defenseSuccess
!mmm         chat: {{TÃ¶dlich verwundet=ðŸ’€ **Countdown lÃ¤uft**}}
!mmm       else if _newHealth < 0 and not _defenseSuccess and _timeToDie >= 0
!mmm         chat: {{TÃ¶dlich verwundet=ðŸ’€ **${_timeToDie} Minuten bis zum Tod**}}
!mmm       end if
!mmm       if not _maxEndurance == 0 and _newEndurance == 0 and (_newHealth >= 0 and not (_timeToDie < 0))
!mmm         chat: {{ErschÃ¶pft=ðŸŸ¢ (-4 auf alles, max. Last reduziert)}}
!mmm       end if
!mmm     end if
!mmm
!mmm   end combine
!mmm
!mmm   set CURRENT = PARENT
!mmm   set PARENT = undef   
!rem // end MMM fragment