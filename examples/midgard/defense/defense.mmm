!rem // Midgard Combat Defense Script
!rem // 
!mmm script
!mmm   set scriptVersion = "1.5.1 (2021-12-14)"
!mmm
!rem   // MMM compatibility check: die if MMM version too low
!mmm   if version < 1.21
!mmm     do whisperback("Abbruch: MMM-Version 1.20.0 oder höher erforderlich.")
!mmm     exit script
!mmm   end if
!mmm
!rem   // Config: set defaults for customizable variables
!rem   //
!rem   //  cCheckVersion        Toggle version check
!rem   //  cVerbose             Toggle narrative output: true for on, false for off 
!rem   //  cWeaponLabel         The label of the weapon, must be identical to your combat sheet
!rem   //  cOwnID               Override if the script should work from a sender not identical with the character
!rem   //  cHealthAttr          Override if character's/token's health is stored differently than usual
!rem   //  cEnduranceAttr       Override if character's/token's endurance is stored differently than usual
!rem   //
!mmm   set customizable cCheckVersion = false
!mmm   set customizable cVerbose = true
!mmm   set customizable cWeaponLabel = "Abwehr ohne Schild"
!mmm   if selected
!mmm     set customizable cOwnID = selected.token_id
!mmm     set customizable cHealthAttr = "bar3"
!mmm     set customizable cEnduranceAttr = "bar2"
!mmm   else 
!mmm     set customizable cOwnID = sender.token_id
!mmm     set customizable cHealthAttr = "LP"
!mmm     set customizable cEnduranceAttr = "AP"
!mmm   end if
!mmm
!mmm   if cCheckVersion
!mmm     do whisperback("Midgard Combat Defense Script " & scriptVersion)
!mmm     exit script
!mmm   end if
!mmm
!rem   // Constants
!mmm   set m3mgdExchange = getattr("MacroSheet", "character_id")
!mmm   set m3mgdAttrAttackType = "m3mgd_attack_type"
!mmm   set m3mgdAttrAttackerID = "m3mgd_attack_attackerID"
!mmm   set m3mgdAttrAttackTargetID = "m3mgd_attack_targetID"
!mmm   set m3mgdAttrAttackResult = "m3mgd_attack_result"
!mmm   set m3mgdAttrAttackCriticalSuccess = "m3mgd_attack_critical_success"
!mmm   set m3mgdAttrAttackDamage = "m3mgd_attack_damage"
!mmm   set m3mgdAttrAttackDamageRoll = "m3mgd_attack_damage_roll"
!mmm   set m3mgdAttrAttackWeaponType = "m3mgd_attack_weapon_type"
!mmm   set m3mgdAttrXP = "Erfahrungsschatz"
!rem
!rem   // Initialize & collect data
!rem
!rem   // Refetch character_id to ensure access in case of erroneous override in customize block
!mmm   set cOwnID = getattr(cOwnID, "token_id")
!mmm   if isdenied(cOwnID) or isunknown(cOwnID)
!mmm     do whisperback("Abbruch: Keine Zuordnung zu einem zugreifbaren Token möglich - " & cOwnID) 
!mmm     exit script
!mmm   end if
!rem   // Override chat sender for characters unconnected to the player (usually NPCs)
!mmm   if cOwnID ne sender
!mmm     set sender = cOwnID
!mmm   end if
!rem
!rem   // Collect attack data and exit if no defense necessary
!mmm   set validInputs = 0
!mmm   if m3mgdExchange.permission eq "control" and m3mgdExchange.(m3mgdAttrAttackTargetID) eq cOwnID
!mmm     set validInputs = validInputs + 1
!mmm     if m3mgdExchange.(m3mgdAttrAttackType) eq "melee" or m3mgdExchange.(m3mgdAttrAttackType) eq "ranged"
!mmm       set attackType = m3mgdExchange.(m3mgdAttrAttackType)
!mmm       set validInputs = validInputs + 1
!mmm     end if
!mmm     if m3mgdExchange.(m3mgdAttrAttackResult) >= 20
!mmm       set attackResult = m3mgdExchange.(m3mgdAttrAttackResult)
!mmm       set validInputs = validInputs + 1
!mmm     end if
!mmm     if not isunknown(m3mgdExchange.(m3mgdAttrAttackCriticalSuccess)) and m3mgdExchange.(m3mgdAttrAttackCriticalSuccess) == 0 or m3mgdExchange.(m3mgdAttrAttackCriticalSuccess) == 1
!mmm       set criticalAttack = m3mgdExchange.(m3mgdAttrAttackCriticalSuccess)
!mmm       set validInputs = validInputs + 1
!mmm     end if
!mmm     if not isunknown(m3mgdExchange.(m3mgdAttrAttackDamage)) and m3mgdExchange.(m3mgdAttrAttackDamage) >= 0
!mmm       set attackDamage = m3mgdExchange.(m3mgdAttrAttackDamage)
!mmm       set validInputs = validInputs + 1
!mmm     end if
!mmm     if not isunknown(m3mgdExchange.(m3mgdAttrAttackDamageRoll)) and m3mgdExchange.(m3mgdAttrAttackDamageRoll) >= 0
!mmm       set attackDamageRoll = m3mgdExchange.(m3mgdAttrAttackDamageRoll)
!mmm       set validInputs = validInputs + 1
!mmm     end if
!mmm     if not isunknown(m3mgdExchange.(m3mgdAttrAttackWeaponType)) and not m3mgdExchange.(m3mgdAttrAttackWeaponType) eq ""
!mmm       set attackWeaponType = m3mgdExchange.(m3mgdAttrAttackWeaponType)
!mmm       set validInputs = validInputs + 1
!mmm     end if 
!mmm   end if
!mmm   
!mmm   if validInputs < 7
!mmm     do whisperback("**Abwehrskript: Daten fehlen** [**Angriffsdaten eingeben**](~defenseDataEntry)")
!mmm     exit script
!mmm   end if
!mmm
!rem   // Initialize defender 
!mmm   set effDefense = cOwnID.Abwehr + cOwnID.BonusAbwehr
!mmm   set armorLabel = getattr(cOwnID, findattr(cOwnID, "Ruestung", "RsGetragen", true, "Rüstung"))
!mmm   set armorProtection = getattr(cOwnID, findattr(cOwnID, "Ruestung", "RsGetragen", true, "RüsLP"))
!mmm   if isunknown(armorLabel) or isunknown(armorProtection)
!rem     // For NPC tokens where the search for "RsGetragen==true" doesn't work, just take first armor in sheet
!mmm     set armorLabel = getattr(cOwnID, findattr(cOwnID, "Ruestung", "Rüstung"))
!mmm     set armorProtection = getattr(cOwnID, findattr(cOwnID, "Ruestung", "RüsLP"))
!mmm   end if
!mmm   set endurance = cOwnID.(cEnduranceAttr)
!mmm   set health = cOwnID.(cHealthAttr)
!mmm   set maxHealth = cOwnID.(cHealthAttr).max
!rem
!rem   // Check for applicability of parry weapon or shield
!rem   // TODO: parry weapons are usable only if the attack is from the front or the respective side, plus further restrictions based on the kind of parry weapon (Kodex, 70).
!mmm   set parryWeaponUsable = true
!mmm   set parryWeapon = (getattr(cOwnID,findattr(cOwnID, "Abwehr", "AbwWaffe", cWeaponLabel, "FWAbwWaffe")) > 0)
!rem   // If shield/parry weapon accessible and endurance > 0, check applicability and calculate defense benefits
!mmm   if (cOwnID.(cEnduranceAttr).max > 0 and endurance > 0 and parryWeapon and parryWeaponUsable) or (cOwnID.(cEnduranceAttr).max == 0 and parryWeapon and parryWeaponUsable)
!mmm     set effParryWeaponSkill = getattr(cOwnID, findattr(cOwnID, "Abwehr", "AbwWaffe", cWeaponLabel, "FWAbwWaffe")) + getattr(cOwnID, findattr(cOwnID, "Abwehr", "AbwWaffe", cWeaponLabel, "WaffeAbwB"))
!mmm     set parryWeaponEnduranceProtection = getattr(cOwnID,findattr(cOwnID, "Abwehr", "AbwWaffe", cWeaponLabel, "AbwWAP"))
!mmm     set effDefense = effDefense + effParryWeaponSkill
!mmm   else if parryWeapon
!mmm     do whisperback("Parierwaffe " & cWeaponLabel & " wegen Erschöpfung (AP=0) nicht berücksichtigt.")
!mmm   end if
!rem
!rem   // Check for armor piercing projectiles
!mmm   if attackWeaponType eq "Langbogen" or attackWeaponType eq "Kompositbogen" or attackWeaponType eq "schwere Armbrust" or attackWeaponType eq "Schwere Armbrust"
!mmm     set armorPiercing = 1
!mmm   else
!mmm     set armorPiercing = 0
!mmm   end if
!mmm
!rem   // Collect defense modifiers
!mmm   set modifiers = 0
!mmm   set autoModifiers = 0
!mmm   set modifierLog = ""
!mmm   set modifierTooltip = ""
!rem   // 1. Defender exhausted
!mmm   if cOwnID.(cEnduranceAttr).max > 0 and endurance <= 0
!mmm     set autoModifiers = autoModifiers - 4
!mmm     set modifierLog = modifierLog & " {{Erschöpft=-4}} "
!mmm     set modifierTooltip = modifierTooltip & " Erschöpft&nbsp;&nbsp;&nbsp;-4 "
!mmm   end if
!rem   // 2. Dropdown prompt: Focused defense, surprise
!mmm   set semiManualModifiers = "?{Standard-Abwehrmodifikatoren| Normale Abwehr +/-0,0 | Konzentrierte Abwehr +4,+4 | Ich greife überstürzt an -2,-2 | Ich bin überrascht -4,-4 }"
!mmm   if semiManualModifiers == 4
!mmm     set modifierLog = modifierLog & " {{Konzentrierte Abwehr=+4}} "
!mmm     set modifierTooltip = modifierTooltip & " Konzentrierte&nbsp;Abwehr&nbsp;&nbsp;&nbsp;+4 "
!mmm   else if semiManualModifiers == -2
!mmm     set modifierLog = modifierLog & " {{Überstürzter eigener Angriff=-2}} "
!mmm     set modifierTooltip = modifierTooltip & " Überstürzter&nbsp;eigener&nbsp;Angriff&nbsp;&nbsp;&nbsp;-2 "
!mmm   else if semiManualModifiers == -4
!mmm     set modifierLog = modifierLog & " {{Überraschender Angriff=-4}} "
!mmm     set modifierTooltip = modifierTooltip & " Überraschender&nbsp;Angriff&nbsp;&nbsp;&nbsp;-4 "
!mmm   end if
!rem   // Add manual modifiers from user input
!mmm   set manualModifiers = "?{Weitere spezielle Abwehrmodifikatoren|0}"
!mmm   set modifiers = modifiers + autoModifiers + semiManualModifiers + manualModifiers
!mmm   if manualModifiers != 0
!mmm     if manualModifiers > 0
!mmm       set manualModifiers = "+" & (manualModifiers * 1)
!mmm     end if
!mmm     set modifierLog = modifierLog & " {{Manuelle Modifikatoren=" & manualModifiers & "}} "
!mmm     set modifierTooltip = modifierTooltip & " Manuelle&nbsp;Modifikatoren&nbsp;&nbsp;&nbsp;" & manualModifiers & " "
!mmm   end if
!mmm   if modifierLog eq ""
!mmm     set modifierLog = " {{Boni/Mali=keine}} "
!mmm     set modifierTooltip = " Boni/Mali&nbsp;&nbsp;&nbsp;keine "
!mmm   end if
!rem
!rem   // Run & format rolls
&{template:none} [[1d20]] {{}}
!mmm   set defenseRoll = $[[0]]
!mmm   set defenseResult = defenseRoll + effDefense + modifiers
!mmm   if modifiers == 0
!mmm     set modifiers = "+/-0"
!mmm   else if modifiers > 0
!mmm     set modifiers = "+" & modifiers
!mmm   end if
!mmm   set defenseResultLog = defenseResult & " = (1d20:" & defenseRoll & ")+(WW:" & effDefense & ")+(" & modifiers & ")"
!mmm   set modifiers = highlight(modifiers, "info")
!mmm   set defenseResult = highlight(defenseResult, default, defenseResultLog)
!mmm
!mmm   set effEnduranceLoss = 0
!mmm   set effHealthLoss = 0
!mmm
!mmm   if (criticalAttack == 0 and (defenseResult >= attackResult or iscritical(defenseRoll))) or (criticalAttack == 1 and iscritical(defenseRoll))
!rem     // Defense successful
!mmm     set defenseSuccess = true
!mmm
!rem     // Calculate endurance damage (only for max endurance > 0; may be reduced due to parry weapon or shield properties, which are stored as negative values)
!mmm     if not cOwnID.(cEnduranceAttr).max == 0 and parryWeaponEnduranceProtection
!mmm       set effEnduranceLoss = attackDamage + parryWeaponEnduranceProtection
!mmm       if effEnduranceLoss < 0
!mmm         set effEnduranceLoss = 0
!mmm       end if
!mmm       set modifierLog = modifierLog & " {{" & cWeaponLabel & "=AP-Verlust " & parryWeaponEnduranceProtection & "}} "
!mmm     else if not cOwnID.(cEnduranceAttr).max == 0
!mmm       set effEnduranceLoss = attackDamage
!mmm     end if
!mmm
!mmm   else 
!rem     // Defense failed
!mmm     set defenseSuccess = false
!mmm
!rem     // Defender loses full hit points worth of endurance regardless of armor, if not an undead creature with unlimited endurance
!mmm     if not cOwnID.(cEnduranceAttr).max == 0
!mmm       set effEnduranceLoss = attackDamage
!mmm     else 
!mmm       set effEnduranceLoss = 0
!mmm     end if
!mmm
!rem     // Calculate damage to health depending on armor (only for max health > 0, ghosts do not lose health)
!mmm     if not cOwnID.(cHealthAttr).max == 0 and armorProtection > 0
!mmm       if armorProtection > 3 and armorPiercing == 1
!mmm         set armorProtection = 3
!mmm         set modifierLog = modifierLog & " {{" & armorLabel & "=LP-Verlust -" & armorProtection & ", reduziert wg. Geschosstyp (" & m3mgdExchange.(m3mgdAttrAttackWeaponType) & ")}} "
!mmm       else
!mmm         set modifierLog = modifierLog & " {{" & armorLabel & "=LP-Verlust -" & armorProtection & "}} "
!mmm       end if
!mmm       set effHealthLoss = attackDamage - armorProtection
!mmm       if effHealthLoss < 0
!mmm         set effHealthLoss = 0
!mmm       end if
!mmm     else if not cOwnID.(cHealthAttr).max == 0
!mmm       set effHealthLoss = attackDamage
!mmm     end if
!mmm   end if
!mmm
!rem   // Process loss of endurance, if any, and applicable consequences
!mmm   set newEndurance = highlight(endurance - effEnduranceLoss, "normal", "bin fit!")
!mmm   if newEndurance <= 0 
!rem     // AP=0: Green token marker
!mmm     set newEndurance = highlight(0, "bad", "🟢 erschöpft")
!mmm     do setattr(cOwnID, "status_green", true)
!mmm   end if
!mmm   do setattr(cOwnID, cEnduranceAttr, newEndurance)
!mmm   set effEnduranceLoss = highlight(effEnduranceLoss, "info")
!mmm
!rem   // Process loss of health and applicable consequences 
!mmm   set newHealth = highlight(health - effHealthLoss, "normal", "nur ein paar Kratzer")
!mmm   if newHealth <= 0
!rem     // LP <=0 : Death zone marker
!mmm     set newHealth = highlight(newHealth, "bad", "💀 (fast) tot")
!mmm     do setattr(cOwnID, "status_death_zone", true)
!mmm   else if newHealth <= 3 
!rem     // Health <= 3: Red token marker => no actions, movement reduced to 4, 10-minute countdown to shock
!mmm     set newHealth = highlight(newHealth, "bad", "🔴 sehr schwer verletzt")
!mmm     do setattr(cOwnID, "status_red", true)
!mmm   else if newHealth <= .5 * maxHealth
!rem     // Health <= 50%: Yellow token marker => endurance and movement to be limited to 50%
!mmm     set newHealth = highlight(newHealth, "important", "🟡 schwer verletzt")
!mmm     do setattr(cOwnID, "status_yellow", true)
!mmm   end if
!mmm   do setattr(cOwnID, cHealthAttr, newHealth)
!mmm   if effHealthLoss > 0 and newHealth < 0
!mmm     set timeToDie = roll("1d6-" & abs(newHealth)) 
!mmm   end if
!mmm   set effHealthLoss = highlight(effHealthLoss, "info")
!rem
!rem   // Process experience gain for attacker if script is run on an NPC, in which case player is GM with control over attacker sheet
!mmm   set attacker = m3mgdExchange.(m3mgdAttrAttackerID)
!mmm   if attacker.permission eq "control"
!mmm     if (cOwnID.(cEnduranceAttr).max == 0 and not defenseSuccess) or (cOwnID.(cEnduranceAttr).max != 0 and endurance > 0 and effEnduranceLoss > 0)
!mmm       set attackerXPGain = getattr(cOwnID, "Grad") + 3
!mmm       set XPGainLog = "3+" & cOwnID.Grad
!mmm       if m3mgdExchange.(m3mgdAttrAttackType) eq "ranged"
!mmm         set attackerXPGain = attackerXPGain / 2
!mmm         set XPGainLog = "(" & XPGainLog & ") / 2[FK]"
!mmm       end if
!rem       // Devastating hits
!mmm       if attackDamageRoll >= 8 and endurance >= 8
!mmm         set attackerXPGain = attackerXPGain * 2
!mmm         set XPGainLog = "(" & XPGainLog & ") x 2[verheerend]"
!mmm       end if
!mmm       do setattr(attacker, m3mgdAttrXP, attacker.(m3mgdAttrXP) + attackerXPGain)
!mmm       set modifierLog = modifierLog & " {{ Erfahrung (" & attacker.name & ")=+" & attackerXPGain & " EP (= " & XPGainLog & ")}} "
!mmm     else if cOwnID.(cEnduranceAttr).max == 0 and defenseSuccess
!mmm       set modifierLog = modifierLog & " {{ Erfahrung (" & attacker.name & ")=(keine: ∞ AP, abgewehrt) }} "
!mmm     else if cOwnID.(cEnduranceAttr).max != 0 and endurance <= 0
!mmm       set modifierLog = modifierLog & " {{ Erfahrung (" & attacker.name & ")=(keine: Ziel erschöpft) }} "
!mmm     else if cOwnID.(cEnduranceAttr).max != 0 and effEnduranceLoss <= 0
!mmm       set modifierLog = modifierLog & " {{ Erfahrung (" & attacker.name & ")=(keine: kein AP-Verlust) }} "
!mmm     end if
!mmm   else
!mmm     set modifierLog = modifierLog & " {{ Erfahrung (" & attacker.name & ")=(**kein Zugriff**: " & getreason(attacker) & ") }} "
!mmm   end if
!rem
!rem   // Verbose output
!mmm   if cVerbose
!mmm     combine chat
!mmm       if defenseSuccess
!mmm         chat       [DefenseSuccess]:           Ich winde mich, strecke mich, wehre mich, und erleide nur einen **leichten Treffer**.
!mmm         if newHealth < 0
!mmm           chat     [OngoingCriticalInjury]:    ***Ich bin immer noch lebensgefährlich verletzt, mein Countdown läuft weiter.*** [x](https://media.giphy.com/media/OY9XK7PbFqkNO/giphy.gif) ***Jetzt könnte ich eine heilende Hand gebrauchen...***
!mmm         end if
!mmm       else
!mmm         if criticalAttack == 1
!mmm           chat     [DefenseFailureCritDamage]: Ich winde mich, strecke mich, versuche mich zu wehren, aber es reicht einfach nicht: mich erwischt ein schwerer **kritischer Treffer**.
!mmm         else 
!mmm           chat     [DefenseFailureRegDamage]:  Ich winde mich, strecke mich, versuche mich zu wehren, aber es reicht einfach nicht: mich erwischt ein schwerer Treffer.
!mmm         end if
!mmm         if effHealthLoss > 0.33 * maxHealth
!mmm           chat     [DefenseFailureHugeHit]:    AAAAAAARRG! Blut spritzt, Knochen brechen, solche Treffer halte ich nicht viele aus!
!mmm         else if effHealthLoss > .2 * maxHealth
!mmm           chat     [DefenseFailureSeriousHit]: AAAH! Das darf mir nicht oft passieren.
!mmm         else if effHealthLoss > .1 * maxHealth
!mmm           chat     [DefenseFailureModestHit]:  Aua!
!mmm         else if effHealthLoss > 0
!mmm           chat     [DefenseFailureMinorHit]:   Au. Pieks. Na warte!
!mmm         else 
!mmm           chat     [DefenseFailureNoDamage]:   Doch kein Problem für meine $[armorLabel]{armorLabel}, außer Schweiß verliere ich nichts.
!mmm         end if
!mmm         if newHealth < 0 and timeToDie < 0
!mmm           chat     [EffectsImmediateDeath]:    War schön mit euch allen. Bis dann, und danke für den Fisch! $[ownName]{cOwnID.name}, out. [x](https://media.giphy.com/media/96quMvXlWpwRO/giphy.gif)
!mmm         else if newHealth < 0 and timeToDie >= 0
!mmm           chat     [EffectsCriticalInjury]:    ***Ich bin lebensgefährlich verletzt.*** Ich habe noch **$[timeToDie]{timeToDie+0} Minuten** zu leben. [x](https://media.giphy.com/media/OY9XK7PbFqkNO/giphy.gif) ***Jetzt könnte ich eine heilende Hand gebrauchen...***
!mmm         end if
!mmm       end if 
!mmm     end combine
!mmm   end if
!rem
!rem   // Data table
!mmm   combine chat
!rem     // Check if script is run for an NPC (whisper data to GM only) -- determination by health attribute is an ugly workaround
!mmm     if cHealthAttr ne "LP"
!mmm       chat: /w GM
!mmm     end if
!mmm     chat: ${"&"}{template:default} 
!mmm     if (not parryWeapon) or (parryWeapon and endurance > 0)
!mmm       chat: {{name=${cOwnID.name}: Abwehr mit ${cWeaponLabel}}} 
!mmm     else 
!mmm       chat: {{name=${cOwnID.name}: Abwehr (erschöpft)}} 
!mmm     end if 
!mmm     if armorPiercing == 1 and attackDamage > 3
!mmm       chat: {{Angriff=**${attackResult}&nbsp;/&nbsp;${attackDamage}&nbsp;Schaden** (Rüstungsschutz wg. Geschosstyp auf 3 begrenzt)}}
!mmm     else if attackDamage == 0
!mmm       chat: {{Angriff=**${attackResult}&nbsp;/&nbsp;Sonderschaden**}}
!mmm     else
!mmm       chat: {{Angriff=**${attackResult}&nbsp;/&nbsp;${attackDamage}&nbsp;Schaden**}}
!mmm     end if
!mmm     chat: {{Abwehr=${defenseResult}&nbsp;(**Wurf**&nbsp;${defenseRoll})}}
!mmm     chat: {{Boni/Mali=**${modifiers}**}}
!mmm     if attackDamage == 0 and defenseSuccess
!mmm       chat: {{Erfolg=**Abwehr gelungen**}}
!mmm     else if attackDamage == 0 and (not defenseSuccess) and criticalAttack
!mmm       chat: {{Fehlschlag=**Schwerer kritischer Treffer**}}
!mmm       chat: {{Schaden=**SPEZIAL**}}
!mmm     else if attackDamage == 0 and (not defenseSuccess) and (not criticalAttack)
!mmm       chat: {{Fehlschlag=**Schwerer Treffer**}}
!mmm       chat: {{Schaden=**SPEZIAL**}}
!mmm     else if attackDamage > 0 and defenseSuccess
!mmm       chat: {{Erfolg=**Leichter Treffer**}}
!mmm       chat: {{Schaden=**${effEnduranceLoss}&nbsp;AP**}}
!mmm       do spawnfx("bubbling-water", getattr(cOwnID, "left"), getattr(cOwnID, "top"))
!mmm     else if attackDamage > 0 and (not defenseSuccess) and criticalAttack == 1
!mmm       chat: {{Fehlschlag=**Schwerer kritischer Treffer**}}
!mmm       chat: {{Schaden=**${effHealthLoss}&nbsp;LP&nbsp;/&nbsp;${effEnduranceLoss}&nbsp;AP +&nbsp;krit.&nbsp;Schaden!**}}
!mmm       do spawnfx("nova-blood", getattr(cOwnID, "left"), getattr(cOwnID, "top"))
!mmm     else 
!mmm       chat: {{Fehlschlag=**Schwerer Treffer**}}
!mmm       chat: {{Schaden=**${effHealthLoss}&nbsp;LP&nbsp;/&nbsp;${effEnduranceLoss}&nbsp;AP**}}
!mmm       do spawnfx("bubbling-blood", getattr(cOwnID, "left"), getattr(cOwnID, "top"))
!mmm     end if
!mmm     if newHealth < 0 and timeToDie < 0
!mmm       chat: {{Zustand=**Sofortiger Tod &#10013;**}}
!mmm     else 
!mmm       chat: {{Zustand=${newHealth} **LP** / ${newEndurance} **AP**}}
!mmm       if newHealth > 3 and newHealth <= 0.5 * maxHealth
!mmm         chat: {{Schwer verwundet=🟡 max. halbe AP, halbe Bewegung}}
!mmm       else if newHealth > 0 and newHealth <= 3
!mmm         chat: {{Extrem schwer verwundet=🔴 handlungsunfähig, B=4, PW:Kon nach 10min, sonst Schock}}
!mmm       else if newHealth == 0
!mmm         chat: {{Dem Tode nah=💀 handlungsunfähig, B=0, PW:Kon nach 10min, sonst Schock}}
!mmm       else if newHealth < 0 and defenseSuccess
!mmm         chat: {{Tödlich verwundet=💀 **Countdown läuft**}}
!mmm       else if newHealth < 0 and not defenseSuccess and timeToDie >= 0
!mmm         chat: {{Tödlich verwundet=💀 **${timeToDie} Minuten bis zum Tod**}}
!mmm       end if
!mmm       if newEndurance == 0 and (newHealth >= 0 and not (timeToDie < 0))
!mmm         chat: {{Erschöpft=🟢 (-4 auf alles, max. Last reduziert)}}
!mmm       end if
!mmm     end if
!mmm   end combine
!mmm   chat: /w GM ${"&"}{template:default} ${modifierLog}
!mmm   chat: /w "${cOwnID.name}" ${"&"}{template:default} ${modifierLog}
!mmm   if parryWeapon and iscritical(defenseRoll)
!mmm     chat: /w "${cOwnID.name}" ***Nicht vergessen: PP für ${cWeaponLabel} einstecken!*** [x](https://media.giphy.com/media/hKafco7mFwBioBxqFT/giphy.gif)
!mmm     chat: /w GM               ***Nicht vergessen: PP für ${cWeaponLabel} einstecken!*** [x](https://media.giphy.com/media/hKafco7mFwBioBxqFT/giphy.gif)
!mmm   end if
!mmm end script