!rem // Defends against Midgard's Snatch ("Heranholen") spell, as defined in Arkanum:91
!rem //
!mmm customize
!mmm   set cGMSilentMode = true
!mmm   set cTargetID = "@{target|Angriffsziel|token_id}"
!mmm end customize
!mmm script
!mmm   set scriptVersion = "defendSnatch 1.3.0 (2025-04-16)"
!mmm
!mmm   set customizable cCheckVersion = false
!mmm   if cCheckVersion
!mmm     do whisperback("Midgard script " & scriptVersion)
!mmm     exit script
!mmm   end if
!mmm
!mmm   if version < 1.26 or not m3mgdExchange
!mmm     do whisperback("MMM version too low or game-global m3mgdExchange variables missing.")
!mmm     exit script
!mmm   end if
!mmm
!mmm   set customizable cVerbose = true
!mmm   set customizable cGMSilentMode = false
!mmm   if selected
!mmm     set customizable cTargetID = selected.token_id
!mmm   else 
!mmm     set customizable cTargetID = sender.token_id
!mmm   end if
!mmm
!mmm   set customizable searchByOrigin = default
!mmm   set customizable searchByAttackResult = default
!mmm
!mmm   set attackData = m3mgdRetrieveAttack(cTargetID)
!mmm   if not (attackData and attackData.attackType eq "magic" and attackData.magicSpell eq "Snatch")
!mmm     set filter = { action: "combatAttack", attackType: "magic", magicSpell: "Snatch" }
!mmm     if not isdefault(searchByOrigin)
!mmm       set filter = { filter, origin: searchByOrigin }
!mmm     end if
!mmm     if not isdefault(searchByAttackResult)
!mmm       set filter = { filter, attackResult: searchByAttackResult }
!mmm     end if
!mmm     set attackData = m3mgdExchangeGetData(m3mgdExchangeRegistries.combatData, filter)
!mmm     if not attackData or count(attackData) > 1
!mmm       do whisperback("Wrong attack/spell data found.")
!mmm       do whisperback(m3mgdExchangeAssignAttack(m3mgdExchangeRegistries.combatData, { action: "combatAttack", attackType: "magic", magicSpell: "Snatch" }, cOwnID))
!mmm       exit script
!mmm     end if
!mmm     debug chat: Identified a single dataset that fits: ${attackData}
!mmm   end if
!mmm   
!mmm   set attackerID = attackData.origin
!mmm   set attackResult = attackData.attackResult
!mmm   if attackData.criticalAttack == true
!mmm     set attackResult = highlight(attackResult, "good", "√úbergeben von " & attackerID.name)
!mmm   else 
!mmm     set attackResult = highlight(attackResult, "normal", "√úbergeben von " & attackerID.name)
!mmm   end if 
!mmm   
!mmm   set defenseRoll = roll("1d20")
!mmm   set defenseResult = defenseRoll + (cTargetID.Abwehr + round(cTargetID.St / 5))
!mmm   set defenseResult = highlight(defenseResult, default, "= üé≤" & defenseRoll & " + Abwehr:" & cTargetID.Abwehr & " + St/5:" & round(cTargetID.St / 5))
!mmm   
!mmm   if iscritical(defenseRoll) or (attackData.criticalAttack == false and defenseResult >= attackResult)
!mmm     
!mmm     set defenseSuccess = true 
!mmm
!mmm   else 
!mmm     
!mmm     set defenseSuccess = false
!mmm     
!mmm   end if
!mmm   
!mmm   set sender = cTargetID.token_name
!mmm   
!rem   // Verbose output
!mmm   if cVerbose
!mmm     combine chat
!mmm       if defenseSuccess
!mmm         chat: Der Gegenstand hat gewackelt aber ich konnte ihn festhalten.
!mmm       else 
!mmm         chat: Der Gegenstand l√∂st sich aus meinen Fingern und schwebt in Richtung ${attackerID.name}.
!mmm       end if
!mmm     end combine
!mmm   end if
!mmm
!rem   // Data table
!mmm   combine chat
!rem     // Check if script is run for an NPC (whisper data to GM only)
!mmm     if cGMSilentMode
!mmm       chat: /w GM 
!mmm     end if
!mmm     chat: ${"&"}{template:default} 
!mmm     chat: {{name=${cTargetID.name}: Abwehr gegen Heranholen}} 
!mmm     chat: {{Zaubererfolg=${attackResult}}}
!mmm     if defenseSuccess
!mmm       chat: {{Abwehrerfolg=${defenseResult} (Wurf ${defenseRoll})}}
!mmm     else 
!mmm       chat: {{Abwehrmisserfolg=${defenseResult} (Wurf ${defenseRoll})}}
!mmm     end if
!mmm   end combine
!mmm
!mmm end script