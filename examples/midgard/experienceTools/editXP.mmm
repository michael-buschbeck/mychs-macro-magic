!rem // editXP: add/remove XP and log accordingly (GM tool to make manual changes to XP accrual)
!rem // 2024-02-08 phr
!mmm script
!mmm   set customizable cTokenID = default
!mmm   set customizable cSign = default
!mmm   set customizable cXPdiff = default
!mmm   set customizable cLogText = default
!mmm
!mmm   set scriptCommand = literal("%") & "{MacroSheet|editXP}"
!mmm
!mmm   if isdefault(cTokenID) or isdefault(cXPdiff) or isdefault(cLogText)
!mmm     
!rem     // once tested, this part should be encapsulated in libMidgard for addition everywhere where automatic XP accrual is reported to the chat with a symbol such as ‚úèÔ∏èüñâüñç‚úéüñâüñçÔ∏è
!mmm     set buttonProps = { "label": "EP hinzuf√ºgen", "scriptCommand": scriptCommand, "settings": { "cTokenID": "selected", "cSign": 1, "cXPdiff": "?" & "{Wieviel?|0}", "cLogText": "\"?" & "{Warum?|}\"" } }
!mmm     set buttonProps = buttonProps, { "label": "EP wegnehmen", "scriptCommand": scriptCommand, "settings": { "cTokenID": "selected", "cSign": -1, "cXPdiff": "?" & "{Wieviel?|0}", "cLogText": "\"?" & "{Warum?|}\"" } }
!mmm     do whisperback(chatButtonTable("EP-Korrektur", { "type": "multi-buttons", "buttonProps": buttonProps } ))
!mmm     
!mmm   else if cXPdiff != 0
!mmm 
!mmm     set effXPdiff = cSign * cXPdiff
!mmm     if effXPdiff < 0 and (not cTokenID.(m3mgdAttrXP) or isunknown(cTokenID.(m3mgdAttrXPLog)) or cTokenID.(m3mgdAttrXPLog) eq "")
!mmm       do whisperback(cTokenID.token_name & " hat gar keine neue Erfahrung, die abgezogen werden k√∂nnte.")
!mmm       exit script
!mmm     end if
!mmm
!mmm     set newXP = cTokenID.(m3mgdAttrXP) + effXPdiff
!mmm     if newXP < 0 or not newXP
!mmm       do whisperback(cTokenID.token_name & " hat nur " & cTokenID.(m3mgdAttrXP) & " EP. W√ºrdest du " & effXPdiff & " EP wegnehmen, w√§re das Ergebnis negativ. Abbruch.")
!mmm       exit script
!mmm     end if
!mmm     if setattr(cTokenID, m3mgdAttrXP, newXP) != newXP
!mmm       do whisperback("Kein Schreibzugriff auf die Erfahrung von " & cTokenID.token_name)
!mmm       exit script
!mmm     end if
!mmm     
!mmm     set logLine = "(" & sign(effXPdiff) & "->) " & cTokenID.(m3mgdAttrXP) & "=" & cLogText
!mmm     do setattr(cTokenID, m3mgdAttrXPLog, cTokenID.(m3mgdAttrXPLog) & " {\{" & logLine & "}\} ")
!mmm
!mmm     do whisperback("Erfahrung f√ºr " & cTokenID.name & " um " & sign(effXPdiff) & " modifiziert.")
!mmm
!mmm   else 
!mmm
!mmm     do whisperback("Erfahrung f√ºr " & cTokenID.name & " wurde nicht ver√§ndert (Eingabe: 0)")
!mmm
!mmm   end if
!mmm   
!mmm end script