!rem // libExchangeTest
!rem //
!mmm script
!mmm   set m3mgdScriptCommands = { m3mgdScriptCommands, exchangeRegEdit: "&#x25;{MacroSheet|exchangeRegEdit}" }
!mmm
%{MacroSheetLibrary|libExchange}
!mmm   do _libExchange()
!mmm   
!mmm   debug chat: libExchange loaded and initialized.
!mmm
!mmm   set dataExchangeID = "m3mgdTestCombatExchange"
!mmm
!mmm function basicTests()   
!mmm   debug chat: Storing a single data entry ...
!mmm   debug do m3mgdExchangeStoreEntry(script.dataExchangeID, { origin: "Yorric MacRathgar".token_id, action: "combatAttack", target: "someone, not quite sure who", type: "magic", rollResult: 27 } )
!mmm   
!mmm   debug chat: Storing a second data entry ...
!mmm   debug do m3mgdExchangeStoreEntry(script.dataExchangeID, { origin: "Yerrick MacRothgar".token_id, action: "combatAttack", target: "Titos Panathos", type: "melee", rollResult: 21 } )
!mmm   
!mmm   debug chat: Retrieving the entire registry ... 
!mmm   debug do m3mgdExchangeGetRegistry(script.dataExchangeID)
!mmm   
!mmm   debug chat: Retrieving a single entry using a single search criterion that does not exist ... 
!mmm   debug do m3mgdExchangeGetData(script.dataExchangeID, { origin: "Yorric MacRathgar".token_id }  )
!mmm   
!mmm   debug chat: Retrieving all "combatAttack" entries using a single search criterion ... 
!mmm   debug do m3mgdExchangeGetData(script.dataExchangeID, { action: "combatAttack" }  )
!mmm   
!mmm   debug chat: Storing a third data entry ...
!mmm   debug do m3mgdExchangeStoreEntry(script.dataExchangeID, { origin: "Titos Panathos".token_id, action: "combatAttack", target: "Yerrick MacRothgar".token_id, type: "magic", rollResult: 39 } )
!mmm   
!mmm   debug chat: Failing to retrieving anything using the wrong search criterion ... 
!mmm   debug do m3mgdExchangeGetData(script.dataExchangeID, { origin: sender }  )
!mmm   
!mmm   debug chat: Retrieving all magical attack entries using two search criteria ... 
!mmm   debug do m3mgdExchangeGetData(script.dataExchangeID, { action: "combatAttack", type: "magic" }  )
!mmm   
!mmm   debug chat: Testing last-criterion-counts, should yield no results ... 
!mmm   debug do m3mgdExchangeGetData(script.dataExchangeID, { action: "combatAttack", type: "magic", rollResult: 21 }  )
!mmm   
!mmm   debug chat: Deleting a single entry
!mmm   debug do m3mgdExchangeDelete(script.dataExchangeID, { origin: "Yerrick MacRothgar".token_id } )
!mmm   
!mmm   debug chat: Retrieving the entire registry ... 
!mmm   combine chat
!mmm     for entry in m3mgdExchangeGetRegistry(script.dataExchangeID)
!mmm       do chat(chatTightBoxRow(entry))
!mmm     end for
!mmm   end combine
!mmm 
!mmm   debug chat: Flushing the registry ... 
!mmm   debug do m3mgdExchangeFlushRegistry(script.dataExchangeID)
!mmm end function  
!mmm   
!rem // === rewritten libMidgard functions ===================================================================================================================
!rem //
!rem // moved to libExchange
!rem //
!rem // === TEST routine =====================================================================================================================================
!mmm function combatDataTest()  
!mmm   
!mmm   
!mmm   set testAttackData = { origin: "Yorric MacRathgar".token_id, target: "-OCOtXCg3YoWVEwO1dKI", action: "combatAttack", attackType: "magic", magicSpell: "Frostball", attackResult: 34, criticalAttack: false, damageResult: 7, damageRoll: 5 }
!mmm   do m3mgdExchangeStoreAttack(testAttackData)
!mmm   set testAttackData = { origin: "Titos Panathos".token_id, target: "-OCOtXCg3YoWVEwO1dKI", action: "combatAttack", attackType: "magic", magicSpell: "Frostball", attackResult: 34, criticalAttack: false, damageResult: 7, damageRoll: 5 }
!rem   // mundane attacks require additionally weaponType with up to two values!
!mmm   do m3mgdExchangeStoreAttack(testAttackData) 
!mmm   
!mmm   set testAttackData = { origin: "Yorric MacRathgar".token_id, target: "-OCOtXCg3YoWVEwO1dKI", action: "combatAttack", attackType: "magic", magicSpell: "Feuerlanze", attackResult: 25, criticalAttack: false, damageResult: 9, damageRoll: 9 }
!mmm   do m3mgdExchangeStoreAttack(testAttackData)
!mmm   set testAttackData = { origin: "Titos Panathos".token_id, target: "-OCOtXCg3YoWVEwO1dKI", action: "combatAttack", attackType: "magic", magicSpell: "Feuerlanze", attackResult: 25, criticalAttack: false, damageResult: 9, damageRoll: 9 }
!mmm   do m3mgdExchangeStoreAttack(testAttackData)
!mmm   
!rem   do m3mgdExchangeRegEdit(dataExchangeID)
!mmm   
!mmm   
!mmm   
!mmm   
!mmm   
!mmm   
!mmm   
!mmm   
!mmm   
!mmm   
!mmm   
!mmm   
!mmm   
!mmm   
!mmm   
!mmm   
!mmm   
!mmm   
!mmm   
!mmm   
!mmm   
!mmm end function  
!mmm   
!mmm   
!mmm   do basicTests()
!mmm   do combatDataTest()
!mmm   
!mmm   
!mmm   
!mmm   
!mmm   
!mmm   
!mmm   
!mmm   
!mmm   
!mmm   
!mmm   
!mmm end script