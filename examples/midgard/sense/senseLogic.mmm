!rem // Midgard Multi-Sense Script 
!rem // v1.1.0 2021-05-18
!rem //
!rem // senseMainLogic -- must be called from a config script
!rem //
!rem // ChangeLog
!rem // - Major rewrite: proper loops allow for unlimited number of characters
!rem // - Fixed tooltip for roll output
!rem // - Use token ids, not character ids, to be usable for generic NPCs
!rem //
!rem // TODO
!rem // - Rework config scripts accordingly
!rem //
!mmm script
!rem
!rem   // MMM compatibility check: die if MMM version too low
!mmm   if version < 1.19
!mmm     do whisperback("Abbruch: MMM-Version 1.19.1 oder hÃ¶her erforderlich.")
!mmm     exit script
!mmm   end if
!rem
!rem   // Config: set defaults for customizable variables
!rem   //
!rem   //  cSense                   Must be one of the sense skills in the character sheet table "sinne", column "Fertigkeit2"
!rem   //  cSenseModifier           Modifier to the sense roll
!rem   //  cSuccessMessage,         Text to be sent to players in case of success / failure / critical failure, or in case 
!rem   //  cRegularFailureMessage,  of cSense eq "Sixth Sense", success only (otherwise the player does not receive anything)
!rem   //  cCriticalFailureMessage     
!rem   //  cTokenList               List of valid token_id values for characters that get the sense rolls. Duplicates are ignored.
!rem   //
!mmm   set customizable cSense = "Sehen"
!mmm   set customizable cSenseModifier = 0
!mmm   set customizable cSuccessMessage = "Einer deiner Sinne hat etwas wahrgenommen. Herzlichen GlÃ¼ckwunsch!"
!mmm   set customizable cRegularFailureMessage = "Nichts besonderes hier."
!mmm   set customizable cCriticalFailureMessage = "Nichts besonderes hier. Wirklich nicht!"
!mmm   set customizable cTokenList = false
!mmm
!rem   // Initialize 
!rem   //
!mmm   if not cTokenList and selected
!mmm     set cTokenList = selected
!rem   // This part is for testing only (TEST game)
!mmm   else if not cTokenList
!mmm     set cTokenList = ("-MZTluoLDlixU37g3wSQ", "-MZTfQNADBNmv5q5PbSf", "-MZTluoLDlixU37g3wSQ", "-MZTluoLDlixU37g3wSQ")
!mmm   end if
!mmm
!rem   // cSenseModifier: if positive, add sign for later output
!mmm   if cSenseModifier > 0
!mmm     set cSenseModifier = "+" & cSenseModifier
!mmm   end if
!rem   // Output formatting constants
!mmm   set playerMsgEmoji = "ðŸ’¬"
!mmm   set cssGMTableHead = "#\" style=\"border: 1px solid #000000; display:block;background-color:#702082;margin:0px;padding:5px;font-size:1.05em;font-style:normal;font-weight:bold;color:#FFFFFF;text-decoration:none;"
!mmm   set cssGMTableSection = "#\" style=\"border-left: 1px solid #000000;border-right: 1px solid #000000; display:block;background-color:#FFFFFF;margin:0px;padding:5px;font-size:1.05em;font-style:normal;font-weight:bold;color:#000000;text-decoration:none;"
!mmm   set cssGMTableItem = "#\" style=\"border-left: 1px solid #000000;border-right: 1px solid #000000;border-bottom: 1px solid #000000; display:block;background-color:#f0f0f0;margin:0px;padding:5px;font-style:normal;color:#000000;text-decoration:none;"
!mmm   set cssGMTableItemSuccess = "#\" style=\"border-left: 1px solid #000000;border-right: 1px solid #000000;border-bottom: 1px solid #000000; display:block;background-color:#60f086;margin:0px;padding:5px;font-style:normal;color:#000000;text-decoration:none;"
!mmm   set cssGMTableItemCriticalFailure = "#\" style=\"border-left: 1px solid #000000;border-right: 1px solid #000000;border-bottom: 1px solid #000000; display:block;background-color:#f06560;margin:0px;padding:5px;font-style:normal;color:#000000;text-decoration:none;"
!rem
!rem   // Due diligence: weed out duplicates, in case cTokenList was populated manually or via {target}
!mmm   for id in cTokenList
!mmm     set dupeFound = false
!mmm     for trimmedId in trimmedTokenList
!mmm       if trimmedId eq id
!mmm         set dupeFound = true
!mmm       end if
!mmm     end for
!mmm     if dupeFound
!mmm       debug chat: ${id} found again, skipping.
!mmm     else 
!mmm       set trimmedTokenList = trimmedTokenList, id
!mmm       debug chat: ${id} found for the first time, stored in trimmedTokenList: ${trimmedTokenList}
!mmm     end if
!mmm   end for
!mmm   debug chat: Final trimmedTokenList: ${trimmedTokenList}
!mmm   for item in trimmedTokenList
!mmm     debug chat: * ${item}
!mmm   end for
!rem
!mmm   combine chat
!mmm     chat: /w GM [${cSense}](${cssGMTableHead})
!mmm
!rem     // Run through selected characters
!mmm     for id in trimmedTokenList
!mmm
!rem       // Initialize: refetch character ID and get name and skills
!mmm       set tokenId = getattr(id, "token_id")
!mmm       set charName = getattr(tokenId, "character_name")
!mmm       set charEffectiveSkill = getattr(tokenId, findattr(tokenId, "sinne", "Fertigkeit2", cSense, "FW2")) + getattr(tokenId, findattr(tokenId, "sinne", "Fertigkeit2", cSense, "Fertigkeitsbonus2"))
!mmm       if cSense eq "Nachtsicht" and not charEffectiveSkill
!rem         // For characters without night vision, substitute Vision without a bonus
!mmm         set charEffectiveSkill = getattr(tokenId, findattr(tokenId, "sinne", "Fertigkeit2", "Sehen", "FW2"))
!mmm       end if
!mmm
!rem       // Error handling
!mmm       if isdenied(tokenId) or isunknown(tokenId)
!mmm         set skippedList = skippedList, ("Token '" & id & "': no/inaccessible character")
!mmm       else if not charEffectiveSkill
!mmm         set skippedList = skippedList, ("Character '" & charName & "': '" & cSense & "' inaccessible or does not exist") 
!rem       // And if everything is ready...
!mmm       else
!rem         // Execute sense rolls 
!mmm         set effModifier = charEffectiveSkill + cSenseModifier
!mmm         if effModifier > 0 
!mmm           set effModifier = "+" & effModifier
!mmm         end if
!mmm         set senseRoll = roll("1d20" & effModifier)
!rem         // Overwrite tooltip to break down components
!mmm         set senseResultTooltip = senseRoll & " = (1d20 = " & (senseRoll - effModifier) & ") + (EW = " & charEffectiveSkill & ") " & cSenseModifier
!mmm         set senseResult = highlight(senseRoll, default, senseResultTooltip)
!mmm         
!rem         // Compose output table row for GM
!mmm         set playerMessage = ""
!mmm         chat: [${charName} ${senseResult}](${cssGMTableSection})
!mmm         if senseResult >= 20 or iscritical(senseRoll)
!mmm           set playerMessage = "/w \"" & charName & "\" " & cSuccessMessage
!mmm           chat: [${playerMsgEmoji} *${cSuccessMessage}*](${cssGMTableItemSuccess})
!mmm         else if (cSense ne "Sechster Sinn" and isfumble(senseResult))
!mmm           set playerMessage = "/w \"" & charName & "\" " & cCriticalFailureMessage
!mmm           chat: [${playerMsgEmoji} *${cCriticalFailureMessage}*](${cssGMTableItemCriticalFailure})
!mmm         else if cSense ne "Sechster Sinn"
!mmm           set playerMessage = "/w \"" & charName & "\" " & cRegularFailureMessage
!mmm           chat: [${playerMsgEmoji} *${cRegularFailureMessage}*](${cssGMTableItem})
!mmm         else
!mmm           chat: [*(Keine Nachricht an Spieler)*](${cssGMTableItem})
!mmm         end if
!mmm
!rem         // Queue output message for player
!mmm         if playerMessage ne ""
!mmm           set messageQueue = messageQueue, playerMessage
!mmm         end if
!mmm       end if
!mmm     end for
!mmm
!rem     // Tell GM which selected characters were skipped
!mmm     if skippedList
!mmm       chat: [Skipped Tokens](${cssGMTableSection})
!mmm       for skippedItem in skippedList
!mmm         if skippedItem
!mmm           chat: [${skippedItem}](${cssGMTableItem})
!mmm         end if
!mmm       end for
!mmm     end if
!mmm   end combine
!mmm
!rem   // Closing the curtain: Report results to players
!rem   //
!mmm   for playerMessage in messageQueue
!mmm     do chat(playerMessage)
!mmm   end for
!mmm
!mmm end script