!rem // Midgard Multi-Sense Script (ugly implementation for a hard-coded number of six PCs)
!rem // v1.1.0-dev 2021-05-12
!rem //
!rem // senseMainLogic -- must be called from a config script
!rem //
!rem // TODO
!rem // - Rebuild using a proper loop construct, prettify some of the looping GM output
!rem //
!mmm script
!rem
!rem   // MMM compatibility check: die if MMM version too low
!mmm   if version < 1.19
!mmm     do whisperback("Abbruch: MMM-Version 1.19.0 oder hÃ¶her erforderlich.")
!mmm     exit script
!mmm   end if
!rem
!rem   // Config: set defaults for customizable variables
!rem   //
!rem   //  cSense                   Must be one of the sense skills in the character sheet table "sinne", column "Fertigkeit2"
!rem   //  cSenseMode               ("single", "group") Mode of operation, which defines how some of the other variables are expected
!rem   //  cSenseModifier           Modifier to the sense roll
!rem   //  cSuccessMessage,         Text to be sent to players in case of success / failure / critical failure, or in case 
!rem   //  cRegularFailureMessage,  of cSense eq "Sixth Sense", success only (otherwise the player does not receive anything)
!rem   //  cCriticalFailureMessage     
!rem   //  cChar1ID...              Valid character_id values for PCs that get the sense rolls. Duplicates are ignored.
!rem   //
!mmm   set customizable cSense = "Sehen"
!mmm   set customizable cSenseMode = "single"
!mmm   set customizable cSenseModifier = 0
!mmm   set customizable cSuccessMessage = "Einer deiner Sinne hat etwas wahrgenommen. Herzlichen GlÃ¼ckwunsch!"
!mmm   set customizable cRegularFailureMessage = "Nichts besonderes hier."
!mmm   set customizable cCriticalFailureMessage = "Nichts besonderes hier. Wirklich nicht!"
!mmm   set customizable cChar1ID = false
!mmm   set customizable cChar2ID = false
!mmm   set customizable cChar3ID = false
!mmm   set customizable cChar4ID = false
!mmm   set customizable cChar5ID = false
!mmm   set customizable cChar6ID = false
!mmm
!mmm   if selected
!mmm     set cCharList = selected
!mmm   else
!mmm     set cCharList = ("-MZTluoLDlixU37g3wSQ", "-MZTfQNADBNmv5q5PbSf", "-MZTluoLDlixU37g3wSQ", "-MZTluoLDlixU37g3wSQ")
!mmm   end if
!mmm
!rem   // Initialize for different modes of calling the script
!rem   //
!rem   // cSenseMode: check for the valid modes of operations, otherwise die.
!mmm   if (cSenseMode ne "single") and (cSenseMode ne "group")
!mmm     do whisperback("Invalid configuration: script does not understand cSenseMode=" & cSenseMode)
!mmm     exit script
!mmm   end if
!rem   // Output formatting constants
!mmm   set playerMsgEmoji = "ðŸ’¬"
!mmm   set cssGMTableHead = "#\" style=\"border: 1px solid #000000; display:block;background-color:#702082;margin:0px;padding:5px;font-size:1.05em;font-style:normal;font-weight:bold;color:#FFFFFF;text-decoration:none;"
!mmm   set cssGMTableSection = "#\" style=\"border-left: 1px solid #000000;border-right: 1px solid #000000; display:block;background-color:#FFFFFF;margin:0px;padding:5px;font-size:1.05em;font-style:normal;font-weight:bold;color:#000000;text-decoration:none;"
!mmm   set cssGMTableItem = "#\" style=\"border-left: 1px solid #000000;border-right: 1px solid #000000;border-bottom: 1px solid #000000; display:block;background-color:#f0f0f0;margin:0px;padding:5px;font-style:normal;color:#000000;text-decoration:none;"
!mmm   set cssGMTableItemSuccess = "#\" style=\"border-left: 1px solid #000000;border-right: 1px solid #000000;border-bottom: 1px solid #000000; display:block;background-color:#60f086;margin:0px;padding:5px;font-style:normal;color:#000000;text-decoration:none;"
!mmm   set cssGMTableItemCriticalFailure = "#\" style=\"border-left: 1px solid #000000;border-right: 1px solid #000000;border-bottom: 1px solid #000000; display:block;background-color:#f06560;margin:0px;padding:5px;font-style:normal;color:#000000;text-decoration:none;"
!rem
!rem   // Due diligence: weed out duplicates
!mmm   for id in cCharList
!mmm     set dupeFound = false
!mmm     for trimmedId in trimmedCharList
!mmm       if trimmedId eq id
!mmm         set dupeFound = true
!mmm       end if
!mmm     end for
!mmm     if dupeFound
!mmm       debug chat: ${id} found again, skipping.
!mmm     else 
!mmm       if trimmedCharList
!mmm         set trimmedCharList = trimmedCharList, id
!mmm       else
!mmm         set trimmedCharList = id
!mmm       end if
!mmm       debug chat: ${id} found for the first time, stored in trimmedCharList: ${trimmedCharList}
!mmm     end if
!mmm   end for
!mmm   debug chat: Final trimmedCharList: ${trimmedCharList}
!rem
!mmm   combine chat
!mmm     chat: /w GM [${cSense}](${cssGMTableHead})
!mmm
!rem     // Run through selected characters
!mmm     for id in trimmedCharList
!mmm
!rem       // Initialize: refetch character ID and get name and skills
!mmm       set charId = getattr(id, "character_id")
!mmm       set charName = getattr(charId, "character_name")
!mmm       set charEffectiveSkill = getattr(charId, findattr(charId, "sinne", "Fertigkeit2", cSense, "FW2")) + getattr(charId, findattr(charId, "sinne", "Fertigkeit2", cSense, "Fertigkeitsbonus2"))
!mmm       if cSense eq "Nachtsicht" and not charEffectiveSkill
!rem         // For characters without night vision, substitute Vision without a bonus
!mmm         set charEffectiveSkill = getattr(charId, findattr(charId, "sinne", "Fertigkeit2", "Sehen", "FW2"))
!mmm       end if
!mmm
!rem       // Error handling
!rem       // TODO: avoid initial [undef] element in list, add to GM output
!mmm       if isdenied(charId) or isunknown(charId)
!mmm         set skippedList = skippedList, "Token '${charId}' does not belong to an accessible character"
!mmm       else if not charEffectiveSkill
!mmm         set skippedList = skippedList, "Character (" & charName & ") does not allow access to the " & cSense & " skill, or the character might lack that skill completely. Skipping.") 
!mmm       end if
!mmm
!rem       // Execute sense rolls 
!mmm       set senseResult = roll("1d20+" & (charEffectiveSkill + cSenseModifier))
!mmm
!rem       // Compose output table row for GM
!rem       // TODO: redo the highlight tooltip to log modifiers
!mmm       set playerMessage = ""
!mmm       chat: [${charName} ${senseResult}](${cssGMTableSection})
!mmm       if senseResult >= 20 or iscritical(senseResult)
!mmm         set playerMessage = "/w \"" & charName & "\" " & cSuccessMessage
!mmm         chat: [${playerMsgEmoji} *${message}*](${cssGMTableItemSuccess})
!mmm       else if (cSense ne "Sechster Sinn" and isfumble(senseResult))
!mmm         set playerMessage = "/w \"" & charName & "\" " & cCriticalFailureMessage
!mmm         chat: [${playerMsgEmoji} *${message}*](${cssGMTableItemCriticalFailure})
!mmm       else if cSense ne "Sechster Sinn"
!mmm         set playerMessage = "/w \"" & charName & "\" " & cRegularFailureMessage
!mmm         chat: [${playerMsgEmoji} *${message}*](${cssGMTableItem})
!mmm       else
!mmm         chat: [*(Keine Nachricht an Spieler)*](${cssGMTableItem})
!mmm       end if
!mmm
!rem       // Queue output message for player
!mmm       if playerMessage ne "" and messageQueue
!mmm         set messageQueue = messageQueue, playerMessage
!mmm       else if playerMessage ne "" 
!mmm         set messageQueue = playerMessage
!mmm       end if
!mmm     end for
!mmm   end combine
!mmm
!rem   // Closing the curtain: Report results to players
!rem   //
!mmm   for playerMessage in messageQueue
!mmm     chat: ${playerMessage}
!mmm   end for
!mmm
!mmm end script